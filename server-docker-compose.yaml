version: "3.8"

services:
  backend:
    image: plwatermelon/asana-backend:latest
    container_name: backend
    ports:
      - "8000:8000"
    restart: unless-stopped
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - ADMIN_USERNAME=${ADMIN_USERNAME}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - EXPERT_USERNAME=${EXPERT_USERNAME}
      - EXPERT_PASSWORD=${EXPERT_PASSWORD}
      - GUEST_USERNAME=${GUEST_USERNAME}
      - GUEST_PASSWORD=${GUEST_PASSWORD}
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=${ALGORITHM}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES}
      # Почтовые настройки
      - SMTP_HOST=mailcow
      - SMTP_PORT=${SUBMISSION_PORT}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_FROM=${SMTP_FROM}
      - SMTP_FROM_NAME=${SMTP_FROM_NAME}
    depends_on:
      - postgres
      - mailcow
    volumes:
      - ./ontology_updated.owl:/app/ontology_updated.owl

  frontend:
    image: plwatermelon/asana-frontend:latest
    container_name: frontend
    ports:
      - "3000:3000"
    environment:
      - BACKEND_URL=http://backend:8000
    restart: unless-stopped

  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - frontend

  mailcow:
    image: mailcow/mailcow-dockerized:latest
    container_name: mailcow
    hostname: mail.${MAIL_DOMAIN}
    restart: always
    ports:
      - "${SMTP_PORT}:25"
      - "${IMAP_PORT}:143"
      - "${SUBMISSION_PORT}:587"
      - "${WEBMAIL_PORT}:443"
    volumes:
      - ./mailcow-data:/var/lib/mailcow
      - ./mailcow-config:/opt/mailcow-dockerized/data
      - ./certs:/opt/mailcow-dockerized/data/assets/ssl
    environment:
      - MAILCOW_HOSTNAME=${MAIL_DOMAIN}
      - TZ=${TIMEZONE}
      - SKIP_LETS_ENCRYPT=${SKIP_LETS_ENCRYPT:-n}
      - SKIP_CLAMD=${SKIP_CLAMD:-n}
      - SKIP_SOLR=${SKIP_SOLR:-n}
      - MAILCOW_PASS=${MAILCOW_ADMIN_PASS}
      - ADDITIONAL_SAN=${ADDITIONAL_SAN}
    networks:
      - mailcow-network
      - default

networks:
  mailcow-network:
    name: mailcow-network

volumes:
  pgdata: 